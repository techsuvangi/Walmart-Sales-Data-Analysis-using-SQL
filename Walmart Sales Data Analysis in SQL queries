-- Create database
CREATE DATABASE IF NOT EXISTS salesdatawalmart;

-- Create table
create table if not exists sales(
     invoice_id Varchar(30) not null primary key,
     branch Varchar(5) not null,
     city Varchar(30) not null,
     customer_type Varchar(30) not null,
     gender Varchar(10) not null,
     product_line Varchar(100) not null,
     unit_price decimal(10,2) not null,
     quantity Int not null,
     VAT float(6,4) not null,
     total decimal(12, 4) not null,
     date datetime not null,
     time time not null,
     payment_method Varchar(15) not null,
     cogs decimal(10,2) not null,
     gross_margin_pct float(11,9),
     gross_income decimal(12,4) not null,
     rating float(2,1)
);


-- Data cleaning
SELECT
	*
FROM sales;

-- Add the time_of_day column
SELECT
	time,
	(CASE
		WHEN `time` BETWEEN "00:00:00" AND "12:00:00" THEN "Morning"
        WHEN `time` BETWEEN "12:01:00" AND "16:00:00" THEN "Afternoon"
        ELSE "Evening"
    END) AS time_of_day
FROM sales;

ALTER TABLE sales ADD COLUMN time_of_day VARCHAR(20);

UPDATE sales
SET time_of_day = (
CASE
		WHEN `time` BETWEEN "00:00:00" AND "12:00:00" THEN "Morning"
        WHEN `time` BETWEEN "12:01:00" AND "16:00:00" THEN "Afternoon"
        ELSE "Evening"
END
);

-- Add day_name column

SELECT
	date,
	DAYNAME(date)
FROM sales;

ALTER TABLE sales ADD COLUMN day_name VARCHAR(10);

UPDATE sales
SET day_name = DAYNAME(date);

-- Add month_name column
SELECT
	date,
	MONTHNAME(date)
FROM sales;

ALTER TABLE sales ADD COLUMN month_name VARCHAR(12);

UPDATE sales
SET month_name = MONTHNAME(date);

-- --------------------------------------------------------------------
-- ---------------------------- Generic ------------------------------
-- --------------------------------------------------------------------

-- How many unique cities does the data have?
SELECT 
	DISTINCT city
FROM sales;

-- In which city is each branch?
SELECT 
	DISTINCT city,
    branch
FROM sales;

-- --------------------------------------------------------------------
-- ---------------------------- Product -------------------------------
-- --------------------------------------------------------------------

-- How many unique product lines does the data have?
SELECT
	DISTINCT product_line
FROM sales;

SELECT
	count(DISTINCT product_line)
FROM sales;

-- How many unique customer types does the data have?
SELECT
	DISTINCT customer_type
FROM sales;

-- How many unique payment methods does the data have?
SELECT
	DISTINCT payment_method
FROM sales;

-- What is the most common payment method?
SELECT
	payment_method,
    count(payment_method) AS cnt
FROM sales
group by payment_method
order by cnt desc;

-- What is the most selling product line
SELECT
	product_line,
    count(product_line) as cnt
FROM sales
GROUP BY product_line
ORDER BY cnt DESC;

-- What is the total revenue by month?
select
    month_name As month,
    Sum(total) As total_revenue
From sales
group by month_name
order by total_revenue Desc;

-- What month had the largest COGS?
Select
     month_name As month,
     Sum(cogs) As cogs
From sales
group by month_name
order by cogs Desc;

-- What product line had the largest revenue?
select
     product_line,
     Sum(total) As total_revenue
From sales
group by product_line
order by total_revenue Desc;

-- What is the city with the largest revenue?
select
     branch,
     city,
     Sum(total) As total_revenue
From sales
group by city, branch
order by total_revenue Desc;

-- What product line had the largest VAT?
Select
    product_line,
    AVG(VAT) as avg_tax
from sales
group by product_line
order by avg_tax Desc;

-- Fetch each product line and add a column to those product line showing "Good", "Bad". Good if its greater than average sales
SELECT 
	AVG(quantity) AS avg_qnty
FROM sales;

SELECT
	product_line,
	CASE
		WHEN AVG(quantity) > 6 THEN "Good"
        ELSE "Bad"
    END AS remark
FROM sales
GROUP BY product_line;

-- Which branch sold more products than average product sold?
Select
     branch,
     SUM(quantity) as qty
from sales
group by branch
Having SUM(quantity) > (SELECT AVG(quantity) FROM sales);

-- What is the most common product line by gender?
select
     gender,
     product_line,
     count(gender) as total_cnt
From sales
Group By gender, product_line
Order By total_cnt Desc;

-- What is the average rating of each product line?
Select
    Round(Avg(rating), 2) as avg_rating,
    product_line
From sales
group by product_line
order by avg_rating Desc; 
    
-- --------------------------------------------------------------------
-- ---------------------------- Sales ---------------------------------
-- --------------------------------------------------------------------

-- Number of sales made in each time of the day per weekday
Select
	time_of_day,
    count(*) as total_sales
From sales
group by time_of_day
order by total_sales Desc;

-- Which of the customer types brings the most revenue?
Select
      customer_type,
      Round(Sum(total), 2) as total_rev
from sales
group by customer_type
order by total_rev Desc;

-- Which city has the largest tax percent/ VAT (Value Added Tax)?
select
    city,
    round(avg(VAT), 2) as VAT
from sales
group by city
order by VAT desc;

-- Which customer type pays the most in VAT?
Select
    customer_type,
    round(avg(VAT), 2) as VAT
from sales
group by customer_type
order by VAT desc;

-- --------------------------------------------------------------------
-- ---------------------------- Customer ------------------------------
-- --------------------------------------------------------------------

-- How many unique customer types does the data have?
SELECT
	DISTINCT customer_type
FROM sales;

-- How many unique payment methods does the data have?
SELECT
	DISTINCT payment_method
FROM sales;

-- What is the most common customer type?
SELECT
	customer_type,
	count(*) as count
FROM sales
GROUP BY customer_type
ORDER BY count DESC;

-- Which customer type buys the most?
SELECT
	customer_type,
    COUNT(*) as cstm_cnt
FROM sales
GROUP BY customer_type;

-- What is the gender of most of the customers?
SELECT
	gender,
	COUNT(*) as gender_cnt
FROM sales
GROUP BY gender
ORDER BY gender_cnt DESC;

-- What is the gender distribution per branch?
SELECT
	gender,
	COUNT(*) as gender_cnt
FROM sales
WHERE branch = "A"
GROUP BY gender
ORDER BY gender_cnt DESC;

-- Which time of the day do customers give most ratings?
SELECT
	time_of_day,
	round(AVG(rating), 2) AS avg_rating
FROM sales
GROUP BY time_of_day
ORDER BY avg_rating DESC;

-- Which time of the day do customers give most ratings per branch?
SELECT
	time_of_day,
	AVG(rating) AS avg_rating
FROM sales
WHERE branch = "A"
GROUP BY time_of_day
ORDER BY avg_rating DESC;

-- Which day fo the week has the best avg ratings?
SELECT
	day_name,
	AVG(rating) AS avg_rating
FROM sales
GROUP BY day_name 
ORDER BY avg_rating DESC;

-- Which day of the week has the best average ratings per branch?
SELECT 
	day_name,
	COUNT(day_name) total_sales
FROM sales
WHERE branch = "A"
GROUP BY day_name
ORDER BY total_sales DESC;

-- -----------------------THE END---------------------------------------------
-- ---------------------------------------------------------------------------
